version: 2.1

### Executors ###
executors:
  node:
    docker: 
      - image: cimg/node:14.0.0

### Jobs ###
jobs:

  # Setting up temporary artifacts
  artifacts: 
    working_directory: /tmp
    executor:
      name: node
    steps:
      - run:
          name: Creating Dummy Artifacts
          command: |
            echo "my artifact file" > /tmp/art-1;
            mkdir /tmp/artifacts;
            echo "my artifact files in a dir" > /tmp/artifacts/art-2;

      - store_artifacts:
          path: /tmp/art-1
          destination: artifact-file

      - store_artifacts:
          path: /tmp/artifacts

  # Building application yarn install & cypress install
  build: 
    executor:
      name: node
    steps:
      - checkout
      - run: yarn install
      - run: CYPRESS_INSTALL_BINARY=0 yarn add cypress

  # Lint using eslint
  lint: 
    executor:
      name: node
    steps:
      - checkout
      - restore_cache:
          keys:
            - yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-packages-v1-{{ .Branch }}-
            - yarn-packages-v1-
      - run: yarn install
      - run: yarn lint
      - save_cache:
          paths:
            - ~/.cache/yarn
          key: yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}

  # Cypress unit testing
  test: 
    docker: 
      - image: cypress/base:10
    parallelism: 4
    resource_class: large
    steps: 
      - checkout
      - restore_cache:
          keys:
            - yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-packages-v1-{{ .Branch }}-
            - yarn-packages-v1-
      - run: yarn install --frozen-lockfile
      - save_cache:
          paths:
            - ~/.cache/yarn
          key: yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - run: yarn cypress run $CYPRESS_TEST
      - store_test_results:
          path: ~/project/tests
      - store_artifacts:
          path: ~/project/tests/junit.xml

  # Build then push docker image to gcr
  build-docker-image: 
    machine: true
    resource_class: large
    steps:
      - checkout
      - gcp-gcr/gcr-auth
      - gcp-gcr/build-image:
          image: planted-app
          tag: $CIRCLE_SHA1
      - gcp-gcr/push-image:
          image: planted-app
          tag: $CIRCLE_SHA1
  
  # Deploy application to gke
  gke-deploy: 
    machine: true
    resource_class: large
    steps:
      - gcp-gcr/gcr-auth
      - gke/update-kubeconfig-with-credentials:
          cluster: planted-cluster
          install-kubectl: true
      - gke/rollout-image:
          cluster: planted-cluster
          deployment: planted-prod
          container: planted-prod
          image: gcr.io/circleci-demo-286921/planted-app
          tag: $CIRCLE_SHA1

### Workflows ###
workflows: 
  version: 2.1
  build_test_deploy: 
    jobs: 
      - artifacts
      - build
      - lint:
          requires:
            - build
      - test:
          requires: 
            - build
      - build-docker-image:
          context: GCLOUD
          requires: 
            - test
            - lint
          filters:
            branches:
              only:
                - main
      - hold-gke-deploy:
          type: approval
          requires: 
            - build-docker-image
      - gke-deploy: 
          context: GCLOUD
          requires: 
            - hold-gke-deploy

### Orbs ###
orbs:
  gcp-gcr: circleci/gcp-gcr@0.7.1
  gke: circleci/gcp-gke@1.1.0
  cypress: cypress-io/cypress@1.26.0